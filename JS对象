创建javascript对象
          创建直接的实例  var person=new object();person.name="";person.age=;
                         person={name:"",age:}
           使用对象构造器
                          function person(name,age)
                          {
                          this.name=name;
                          this.age=age;
                          function changeName(name)
                          {
                          this.lastname=name;
                          }
                          }
                          ver person=new person("name",a)
for...in循环
          循环遍历对象的每一个属性
                          for(x in person)
                          {
                          txt=txt+x;
                          }
JS数字
JS字符串
          长度length  
          查找indexOf()//定位字符串中某一个指定的字符首次出现的位置
          替换replace()//用某些字符替换另一些字符
          匹配match()//查找字符串中特定的字符，并且如果找到的话，则返回这个字符
          样式big()|small()...
 JS日期   
          Date（）//返回当前时间
          getTime()//返回70年1月1日至今的毫秒数
          setFullYear()//设置具体的日期，参数为年月日
          toUTCString()//将当前日期转换成字符串
          getDay()//将周日到周六编号为0-6
          getMinutes()|getHours()|getSeconds()
          显示钟表：在body标签onload属性设置函数startTime(),并在函数中设置定时器setTimeout('startTime()',500)递归调用自身
          日期可进行大小比较
 JS数组
          定义数组：1.var myArray=new Array();myArray[0]="";myArray[1]="";
                    2.var myArray=new Array("","");
  JS逻辑
           创建Boolean对象: var myBoolean=new Boolean();//当初始化参数为空或其值为 0、-0、null、""、false、undefined 或者 NaN，那么对象值为                 false,否则值为true
   JS算数
            四舍五入 Math.round()
            0-1之间随机数 Math.random()
            较大数  Math.max()
            较小数  Math.min()
            常数 Math.E
          圆周率 Math.PI
          2 的平方根 Math.SQRT2
          1/2 的平方根 Math.SQRT1_2
          2 的自然对数 Math.LN2
          10 的自然对数 Math.LN10
          以 2 为底的 e 的对数 Math.LOG2E
          以 10 为底的 e 的对数 Math.LOG10E
 JS正则表达式
          RegExp对象，初始化参数为正则表达式的模式
          test(),如果检索到值返回true
          exec(),如果检索到值返回该值
          compile(),更改表达式的模式
          
          
          
